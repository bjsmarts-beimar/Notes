Node + API + Angular2
=====================
. Create project folder "NodeApiAngularApp"

. Go inside "NodeApiAngularApp" folder

. Create "client" and "server" folder


======================================================
 SERVER IMPLEMENTATION
======================================================

. Go inside "server" folder

. run "> npm init" to initialize "nodejs" project

. run "touch server.js"

. add Express, mongoose, body-parser 
> npm install express mongoose body-parser --save

. open server.js and add the following code


// call the packages we need
var express    = require('express');        // call express
var app        = express();                 // define our app using express
var bodyParser = require('body-parser');

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var port = process.env.PORT || 3000;        // set our port

// ROUTES FOR OUR API
// =============================================================================
var router = express.Router();              // get an instance of the express Router

//middleware goes here

// test route to make sure everything is working (accessed at GET http://localhost:8080/api)
router.get('/', function(req, res) {
    res.json({ message: 'hooray! welcome to our api!' });   
});

// more routes for our API will happen here

// REGISTER OUR ROUTES -------------------------------
// all of our routes will be prefixed with /api
app.use('/api', router);

// START THE SERVER
// =============================================================================
app.listen(port);
console.log('REST API Server listen on port ' + port);

. Open package.json
"start": "node server.js"

. Connect to MongoDb, add the following lines:

var mongoose   = require('mongoose');
mongoose.connect('mongodb://localhost:27017/TestDb');

. Create app/ folder
. Create app/models folder
. Create Model, add a file "season.js" and add the following code:

// app/models/season.js

var mongoose     = require('mongoose');
var Schema       = mongoose.Schema;

var SeasonSchema   = new Schema({
    name: String
});

module.exports = mongoose.model('Season', SeasonSchema);

. open the server.js and add the reference to the new 'season' model

var Season     = require('./app/models/season');

. add the Middleware to server.js

// middleware to use for all requests
router.use(function(req, res, next) {
    // do logging
    console.log('Something is happening.');
    next(); // make sure we go to the next routes and don't stop here
});

. add the Http Verbs: GET POST PUT DELETE

HTTP Verb: POST  Route: /api/seasons
====================================

router.route('/seasons')

    // create a season (accessed at POST http://localhost:3000/api/seasons)
    .post(function(req, res) {
        
        var season = new Season();      // create a new instance of the Season model
        season.name = req.body.name;  // set the season name (comes from the request)

        // save the season and check for errors
        season.save(function(err) {
            if (err)
                res.send(err);

            res.json({ message: 'Season created!' });
        });
        
    });


HTTP Verb: GET  Route: /api/seasons
====================================

    .get(function(req, res) {
        Season.find(function(err, seasons) {
            if (err)
                res.send(err);

            res.json(seasons);
        });
    });


HTTP Verb: GET  Route: /api/seasons/:id
=======================================

router.route('/seasons/:id')

    // get the season with that id (accessed at GET http://localhost:8080/api/seasons/:id)
    .get(function(req, res) {
        Season.findById(req.params.id, function(err, season) {
            if (err)
                res.send(err);
            res.json(season);
        });
    })


HTTP Verb: PUT  Route: /api/seasons/:id
=======================================

    // update the season with this id (accessed at PUT http://localhost:8080/api/seasons/:id)
    .put(function(req, res) {

        // use our season model to find the season we want
        Season.findById(req.params.id, function(err, season) {

            if (err)
                res.send(err);

            season.name = req.body.name;  // update the season info

            // save the season
            season.save(function(err) {
                if (err)
                    res.send(err);

                res.json({ message: 'Season updated!' });
            });

        });
    })


HTTP Verb: DELETE  Route: /api/seasons/:id
==========================================

    .delete(function(req, res) {
        Season.remove({
            _id: req.params.id
        }, function(err, bear) {
            if (err)
                res.send(err);

            res.json({ message: 'Successfully deleted' });
        });
    });


===========================================================
 CLIENT IMPLEMENTATION
===========================================================


CLIENT 1 ANGULAR CLI https://github.com/angular/angular-cli/
============================================================
. install the angular cli using npm 
npm install -g @angular/cli

. test installation type: ng serve



CLIENT 2 https://github.com/DeborahK/Angular2-GettingStarted/
=============================================================
. install custom angular project
git clone https://github.com/DeborahK/Angular2-GettingStarted/

. extract started project folder

. run npm install and npm start




